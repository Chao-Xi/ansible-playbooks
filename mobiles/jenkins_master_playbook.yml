##Should be removed, we don't encourage jq
- Name: install jq bbmobile-ci-jenkins
  apt:
    name: jq
    update_cache: yes
  become: yes
  when:  instance_tags.tags.Name == 'bbmobile-ci-jenkins'


##Ansible install ansible virtualenv for itself
- Name: get pyenv stat
  stat:
    path: /home/ubuntu/pyenv 
  register: pyenv_stat

- name: Install pyenv
  block:
    - name: Get pyenv-installer 
      get_url:
        url: https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer
        dest: /usr/local/bin/pyenv-installer
        mode: 0755
    - name: Install pyenv
      command: /usr/local/bin/pyenv-installer
      environment:
        PYENV_ROOT: /home/ubuntu/pyenv
      when: pyenv_stat.stat.exists == False
    - name: Set pyenv owner to ubuntu
      file:
        path: /home/ubuntu/pyenv 
        owner: ubuntu
        group: ubuntu
        recurse: yes
    - name: add pyenv to bachrc
      blockinfile:
        path: /home/ubuntu/.bashrc
        block: |
          export PYENV_ROOT="/home/ubuntu/pyenv"
          export PATH="/home/ubuntu/pyenv/bin:$PATH"
          eval "$(pyenv init -)"
          eval "$(pyenv virtualenv-init -)"
  become: yes
  when: pyenv_stat.stat.exists == False

##Prequisite for python build
- name: install
  apt: 
    name: "{{ item }}"
    state: present
  with_items:
    - build-essential
    - curl
    - libssl-dev
    - libbz2-dev
    - libsqlite3-dev
    - libreadline-dev
  become: yes

##Install python 2.7.9 in pyenv
- name: get pyenv 2.7.9 stat
  stat:
    path: /home/ubuntu/pyenv/versions/2.7.9
  register: py279_stat

- name: Install pythone 2.7.9
  command: /home/ubuntu/pyenv/bin/pyenv install 2.7.9
  environment:
    PYENV_ROOT: /home/ubuntu/pyenv
  when: py279_stat.stat.exists == False

##Install ansible in pyenv
- name: get ansible virtualenv 2.7.9 stat
  stat:
    path: /home/ubuntu/pyenv/versions/ansible
  register: ansible_stat

- name: Install ansible
  command: /home/ubuntu/pyenv/bin/pyenv virtualenv 2.7.9 ansible
  environment:
    PYENV_ROOT: /home/ubuntu/pyenv
  when: ansible_stat.stat.exists == False

- name: ensure requirements.txt exists
  copy:
    src: ansible_requirements.txt
    dest: "/home/ubuntu/pyenv/versions/ansible/requirements.txt"

- name: ensure all requirement install in ansible virtualenv
  pip:
    requirements: "/home/ubuntu/pyenv/versions/ansible/requirements.txt"
    virtualenv: "/home/ubuntu/pyenv/versions/ansible/"


#We will put all open source galaxy in our own repo, galaxy_requirements.yml not needed now
#- name: ensure requirements.txt exists
#  copy:
#    src: galaxy_requirements.yml
#    dest: "/home/ubuntu/pyenv/versions/ansible/galaxy_requirements.yml"
#
#- name: ensure galaxy installed
#  command: /home/ubuntu/pyenv/versions/ansible/bin/ansible-galaxy install -r /home/ubuntu/pyenv/versions/ansible/galaxy_requirements.yml


###https://docs.docker.com/install/linux/docker-ce/ubuntu/
#install the linux-image-extra-* packages, which allow Docker to use the aufs storage drivers.
#$ sudo apt-get update
#
#$ sudo apt-get install \
#    linux-image-extra-$(uname -r) \
#    linux-image-extra-virtual
# $(uname -r) == ansible_kernel
- name: Install linux-image-extra-* packages 
  block:
    - apt:
        name: "linux-image-extra-{{ ansible_kernel }}"
        state: present
        update_cache: yes
      name: install "linux-image-extra-{{ ansible_kernel }}"
    - apt:
        name: "linux-image-extra-virtual"
        state: present
      name: install linux-image-extra-virtual
  become: yes
  when: (ansible_distribution == 'Ubuntu') and
        (ansible_distribution_version == '14.04')

###https://docs.docker.com/install/linux/docker-ce/ubuntu/
#$ sudo apt-get install \
#    apt-transport-https \
#    ca-certificates \
#    curl \
#    software-properties-common
- name: Install the package apt-transport-https ca-certificates curl software-properties-common
  block:
    - apt:
        name: apt-transport-https
        state: present
      name: install apt-transport-https
    - apt:
        name: curl
        state: present
      name: install curl
    - apt:
        name: ca-certificates
        state: present
      name: install ca-certificates
    - apt:
        name: software-properties-common
        state: present
      name: install software-properties-common
  become: yes
  when: (ansible_distribution == 'Ubuntu')

###Install docker
#Add docker apk key
#add apt repo
#update repositories cache and install "docker-ce" package
- name: Add docker apk key
  block:
    - apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present
      name: add Add docker apk key
    - apt_repository:
        repo: "deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ ansible_lsb.codename }} stable"
        state: present
      name: add apt repo
    - apt:
        name: docker-ce=17.12.1~ce-0~ubuntu
        update_cache: yes
      name: install docker-ce=17.12.1~ce-0~ubuntu
  become: yes

###https://docs.docker.com/install/linux/linux-postinstall/
##Add docker group, and add ubuntu to group
- name: add group docker
  block:
    - group:
        name: docker
        state: present
      name: add user group docker
    - user:
        name: ubuntu
        groups: ubuntu,docker
      name: add ubuntu to group docker
  become: yes
